{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Row, Col, Button, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  function sum(arr) {\n    var s = 0;\n\n    for (var i = 0; i < arr.length; i++) {\n      s += arr[i].time;\n    }\n\n    return s;\n  }\n\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n      fresh();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const deleteQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      fresh();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const startQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/start', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      handleShow();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const stopQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/end', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      handleShow1();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = React.useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = () => setShow1(true);\n\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const body = data.quizzes;\n    const num = body.length;\n    const quizzes1 = [];\n\n    for (var i = 0; i < num; i++) {\n      const getquiz = async id => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        });\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data));\n        localStorage.setItem('id', JSON.stringify(id));\n      };\n\n      await getquiz(body[i].id);\n      var quiz = localStorage.getItem('quiz');\n      quiz = JSON.parse(quiz);\n      quiz.id = localStorage.getItem('id');\n      quizzes1.push(quiz);\n    }\n\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1));\n  };\n\n  function renderdash() {\n    getquizzes();\n    quizzes = JSON.parse(localStorage.getItem('quizzes'));\n  }\n\n  const fresh = async () => {\n    await getquizzes();\n    location.reload();\n  };\n\n  renderdash();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          show: show,\n          onHide: handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Game started!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [\"The quiz id your started is \", quiz.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: handleClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose,\n              children: \"Copy url of game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          show: show1,\n          onHide: handleClose1,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Game stopped!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: \"Do you want to see result?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: handleClose1,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              href: `/getresult${quiz.id}`,\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: quiz.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: quiz.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"questions: \", quiz.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"finish time: \", sum(quiz.questions)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                size: \"sm\",\n                href: `/editquiz${quiz.id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: e => deleteQuiz(quiz.id, e),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                size: \"sm\",\n                onClick: e => startQuiz(quiz.id, e),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                size: \"sm\",\n                onClick: e => stopQuiz(quiz.id, e),\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, quiz.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), \"Quiz name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), \"Quiz id: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteQuiz(id, e),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"68x8Mt8frC5LMWtoB7nlYjfyli0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx"],"names":["React","useNavigate","Card","Row","Col","Button","Modal","Dashboard","navigate","name","setName","useState","id","setId","quizzes","token","localStorage","getItem","useEffect","sum","arr","s","i","length","time","createQuiz","fetch","method","headers","Authorization","body","JSON","stringify","fresh","err","alert","deleteQuiz","startQuiz","handleShow","stopQuiz","handleShow1","show","setShow","handleClose","show1","setShow1","handleClose1","getquizzes","response","data","json","num","quizzes1","getquiz","setItem","quiz","parse","push","renderdash","location","reload","map","thumbnail","questions","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n  Button,\n  Modal\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Dashboard () {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login')\n    }\n  });\n  function sum (arr) {\n    var s = 0\n    for (var i = 0; i < arr.length; i++) {\n      s += arr[i].time\n    }\n    return s\n  }\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify({ name }),\n      });\n      fresh()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const deleteQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      fresh()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const startQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/start', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      handleShow()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const stopQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/end', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      handleShow1()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [show1, setShow1] = React.useState(false);\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const body = data.quizzes\n    const num = body.length\n    const quizzes1 = []\n    for (var i = 0; i < num; i++) {\n      const getquiz = async (id) => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token,\n          }\n        })\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data))\n        localStorage.setItem('id', JSON.stringify(id))\n      }\n      await getquiz(body[i].id);\n      var quiz = localStorage.getItem('quiz')\n      quiz = JSON.parse(quiz)\n      quiz.id = localStorage.getItem('id')\n      quizzes1.push(quiz);\n    }\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1))\n  }\n  function renderdash () {\n    getquizzes()\n    quizzes = JSON.parse(localStorage.getItem('quizzes'))\n  }\n  const fresh = async () => {\n    await getquizzes()\n    location.reload()\n  }\n  renderdash()\n\n  return (\n    <>\n      <div className='Title'><h1>Dashboard</h1></div>\n      <Row xs={1} md={4} className=\"g-4\">\n        {quizzes.map(quiz => (\n          <Col key={quiz.id}>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Game started!</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>The quiz id your started is {quiz.id} </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleClose}>\n                  Copy url of game\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Modal show={show1} onHide={handleClose1}>\n              <Modal.Header closeButton>\n                <Modal.Title>Game stopped!</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>Do you want to see result?</Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleClose1}>\n                  Yes\n                </Button>\n                <Button variant=\"secondary\" href={`/getresult${quiz.id}`}>\n                  No\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Card>\n              <Card.Img variant=\"top\" src={quiz.thumbnail} />\n              <Card.Body>\n                <Card.Title>{quiz.name}</Card.Title>\n                <Card.Text>\n                  questions: {quiz.questions.length}\n                </Card.Text>\n                <Card.Text>\n                  finish time: {sum(quiz.questions)}\n                </Card.Text>\n                <Card.Text>\n                  <Button variant=\"outline-primary\" size=\"sm\" href={`/editquiz${quiz.id}`}>Edit</Button>\n                  <br />\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={e => deleteQuiz(quiz.id, e)}>Delete</Button>\n                </Card.Text>\n                <Card.Text>\n                  <Button variant=\"link\" size=\"sm\" onClick={e => startQuiz(quiz.id, e)}>Start</Button>\n                  <br />\n                  <Button variant=\"link\" size=\"sm\" onClick={e => stopQuiz(quiz.id, e)}>Stop</Button>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <br />\n      Quiz name: <input type=\"text\" onChange={e => setName(e.target.value)}></input>\n      <button onClick={createQuiz}>Create</button>\n      <br />\n      <br />\n      Quiz id: <input type=\"text\" onChange={e => setId(e.target.value)}></input>\n      <button onClick={e => deleteQuiz(id, e)}>Delete</button>\n    </>);\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}