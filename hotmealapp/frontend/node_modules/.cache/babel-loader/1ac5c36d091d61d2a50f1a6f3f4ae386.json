{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/QuizNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizNew() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer' + token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"QuizNew\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), \"Quiz name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onchange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(QuizNew, \"qhCjx21NJ6eV6+zMxrGGkJB5gkM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = QuizNew;\nexport default QuizNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizNew\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/QuizNew.jsx"],"names":["React","useNavigate","QuizNew","navigate","name","setName","useState","token","localStorage","getItem","useEffect","createQuiz","fetch","method","headers","body","JSON","stringify","err","alert","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;;AAEA,SAASC,OAAT,GAAoB;AAAA;;AAClB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAxB;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,KAAL,EAAY;AACVJ,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAJD;;AAMA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,QAAG;AACD,YAAMC,KAAK,CAAC,sCAAD,EAAyC;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiB,WAASP;AAFnB,SAFyC;AAMlDQ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEb,UAAAA;AAAF,SAAf;AAN4C,OAAzC,CAAX;AAQD,KATD,CASE,OAAMc,GAAN,EAAW;AACXC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD;AACF,GAbD;;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,8BAEa;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEE,CAAC,IAAIf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFb,eAGE;AAAQ,MAAA,OAAO,EAAEX,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAMD;;GA9BQT,O;UACUD,W;;;KADVC,O;AAgCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction QuizNew () {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login')\n    }\n  });\n\n  const createQuiz = async () => {\n    try{\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': 'Bearer'+token,\n        },\n        body: JSON.stringify({ name }),\n      });\n    } catch(err) {\n      alert(err)\n    }\n  }\n  return (\n    <>\n      <h1>QuizNew</h1>\n      Quiz name: <input type=\"text\" onchange={e => setName(e.target.value)}></input>\n      <button onClick={createQuiz}>Create</button>\n    </>);\n}\n\nexport default QuizNew;\n"]},"metadata":{},"sourceType":"module"}