{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Play() {\n  _s();\n\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid;\n  const playerid = localStorage.getItem('playerid');\n  var theanswers = React.useState([1, 1]);\n  var show = React.useState(false);\n  var show1 = React.useState(false);\n  const [answer, setAnswer] = React.useState([]);\n\n  const getsession = async id => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data));\n  };\n\n  const uploadanswer = async () => {\n    var answerIds = [];\n\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i);\n        }\n      }\n    }\n\n    await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        answerIds\n      })\n    });\n  };\n\n  getsession(sessionid);\n  const session = JSON.parse(localStorage.getItem('session'));\n  const position = session.results.position;\n  const question = session.results.questions[position];\n\n  if (question.type === 'single choice') {\n    show = true;\n    console.log(true);\n  } else {\n    show1 = true;\n  }\n\n  theanswers = question.answer;\n  const time = 10;\n  const [timing, setTiming] = React.useState(false);\n  const [second, setSecond] = React.useState(time);\n  React.useEffect(() => {\n    let timer;\n\n    function countdown() {\n      setSecond(preSecond => {\n        if (preSecond <= 1) {\n          setTiming(false);\n          return time;\n        } else {\n          timer = setTimeout(countdown, 1000);\n          return preSecond - 1;\n        }\n      });\n    }\n\n    if (timing) {\n      timer = setTimeout(countdown, 1000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [timing]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: timing,\n      onClick: () => setTiming(true),\n      children: timing ? 'Timing' + second : 'Go'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Choose your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          style: {\n            display: show\n          },\n          onChange: e => {\n            setAnswer(e.target.value);\n            uploadanswer(e);\n          },\n          children: theanswers.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          style: {\n            display: show1\n          },\n          onChange: e => {\n            setAnswer(e.target.value);\n            uploadanswer(e);\n          },\n          children: theanswers.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Play, \"uTyBZAweeUi/BvwXzNT1VT+w6Z0=\", false, function () {\n  return [useParams];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx"],"names":["React","useParams","Form","Play","params","token","localStorage","getItem","sessionid","playerid","theanswers","useState","show","show1","answer","setAnswer","getsession","id","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","uploadanswer","answerIds","i","question","length","j","push","body","session","parse","position","results","questions","type","console","log","time","timing","setTiming","second","setSecond","useEffect","timer","countdown","preSecond","setTimeout","clearTimeout","text","image","display","e","target","value","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Play () {\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid\n  const playerid = localStorage.getItem('playerid')\n  var theanswers = React.useState([1, 1]);\n  var show = React.useState(false);\n  var show1 = React.useState(false);\n  const [answer, setAnswer] = React.useState([]);\n  const getsession = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data))\n  }\n  const uploadanswer = async () => {\n    var answerIds = []\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i)\n        }\n      }\n    }\n    await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        answerIds,\n      }),\n    })\n  }\n  getsession(sessionid)\n  const session = JSON.parse(localStorage.getItem('session'))\n  const position = session.results.position\n  const question = session.results.questions[position]\n  if (question.type === 'single choice') {\n    show = true\n    console.log(true)\n  } else {\n    show1 = true\n  }\n  theanswers = question.answer\n  const time = 10\n  const [timing, setTiming] = React.useState(false);\n  const [second, setSecond] = React.useState(time);\n  React.useEffect(() => {\n    let timer;\n    function countdown () {\n      setSecond((preSecond) => {\n        if (preSecond <= 1) {\n          setTiming(false);\n          return time;\n        } else {\n          timer = setTimeout(countdown, 1000);\n          return preSecond - 1;\n        }\n      });\n    }\n    if (timing) {\n      timer = setTimeout(countdown, 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [timing]);\n  return <>\n    <div className='Title'><h1>Playing</h1></div>\n    <button disabled={timing} onClick={() => setTiming(true)}>\n      {timing ? 'Timing' + second : 'Go'}\n    </button>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Text>{question.text}</Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image: </Form.Label>\n        <img src={question.image} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Choose your answer</Form.Label>\n        <Form.Text>{question.type}</Form.Text>\n        <Form.Select style={{ display: show }} onChange={e => { setAnswer(e.target.value); uploadanswer(e) }}>\n          {theanswers.map((item, index) => (\n            <option key={index}>{item}</option>\n          ))}\n        </Form.Select>\n        <Form.Select style={{ display: show1 }} onChange={e => { setAnswer(e.target.value); uploadanswer(e) }}>\n          {theanswers.map((item, index) => (\n            <option key={index}>{item}</option>\n          ))}\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Form.Text></Form.Text>\n      </Form.Group>\n    </div>\n  </>\n}\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}