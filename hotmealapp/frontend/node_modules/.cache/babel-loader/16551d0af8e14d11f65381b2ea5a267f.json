{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Editquestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Editquestion() {\n  _s();\n\n  const params = useParams();\n  const id = params.quizid;\n  const questionid = params.questionid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n\n  const getquiz = async id => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const questions = data.questions;\n    localStorage.setItem('questions', JSON.stringify(questions));\n  };\n\n  getquiz(id);\n  questions = JSON.parse(localStorage.getItem('questions'));\n  const thequestion = questions[questionid];\n  const [type, setType] = React.useState(thequestion.type);\n  const [text, setText] = React.useState(thequestion.text);\n  const [time, setTime] = React.useState(thequestion.time);\n  const [value, setValue] = React.useState(thequestion.value);\n  const [image, setImage] = React.useState(thequestion.image);\n  const [answer, setAnswer] = React.useState(thequestion.answer);\n  const [video, setVideo] = React.useState(thequestion.video);\n\n  const updata = async () => {\n    const num = questions.length;\n\n    for (var i = 0; i < num; i++) {\n      if (questions[i].id === thequestion.id) {\n        questions.splice(i, 1);\n      }\n    }\n\n    question.id = thequestion.id;\n    question.type = type;\n    question.text = text;\n    question.time = time;\n    question.value = value;\n    question.image = image;\n    question.video = video;\n    question.answer = answer;\n    questions.push(question);\n\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          questions\n        })\n      });\n      alert('updated!');\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  var list1 = [];\n\n  for (var i = 0; i < answer.length; i++) {\n    list1.push(1);\n  }\n\n  var [list, setList] = React.useState(list1);\n\n  const add = () => {\n    if (list.length === 6) {\n      alert('no more');\n    } else {\n      setList([...list, 1]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"please choose question type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"multiple choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"single choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"text\",\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Time Limit: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"number of minutes\",\n          type: \"text\",\n          value: time,\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"number of question value\",\n          type: \"text\",\n          value: value,\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          value: image,\n          accept: \"image/png, image/jpeg, image/jpg\",\n          placeholder: \"question\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Video: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"url\",\n          type: \"text\",\n          value: video,\n          onChange: e => setVideo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          className: \"g-4\",\n          children: list.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: `input your answer${index + 1}`,\n              value: answer[index],\n              type: \"text\",\n              id: item,\n              onChange: e => setAnswer(answer.map((item, ind) => {\n                if (ind === index) {\n                  item = e.target.value;\n                }\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          type: \"submit\",\n          onClick: add,\n          children: \"Add more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        onClick: updata,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Editquestion, \"MCHkmZ4D/xFDiT4RGrsyC3mFZoU=\", false, function () {\n  return [useParams];\n});\n\n_c = Editquestion;\nexport default Editquestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editquestion\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Editquestion.jsx"],"names":["React","useParams","Form","Button","Row","Col","Editquestion","params","id","quizid","questionid","token","localStorage","getItem","questions","useState","question","getquiz","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","parse","thequestion","type","setType","text","setText","time","setTime","value","setValue","image","setImage","answer","setAnswer","video","setVideo","updata","num","length","i","splice","push","body","alert","err","list1","list","setList","add","e","target","map","item","index","ind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Editquestion () {\n  const params = useParams();\n  const id = params.quizid\n  const questionid = params.questionid\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const getquiz = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const questions = data.questions\n    localStorage.setItem('questions', JSON.stringify(questions))\n  }\n  getquiz(id)\n  questions = JSON.parse(localStorage.getItem('questions'))\n  const thequestion = questions[questionid]\n  const [type, setType] = React.useState(thequestion.type);\n  const [text, setText] = React.useState(thequestion.text);\n  const [time, setTime] = React.useState(thequestion.time);\n  const [value, setValue] = React.useState(thequestion.value);\n  const [image, setImage] = React.useState(thequestion.image);\n  const [answer, setAnswer] = React.useState(thequestion.answer);\n  const [video, setVideo] = React.useState(thequestion.video);\n  const updata = async () => {\n    const num = questions.length\n    for (var i = 0; i < num; i++) {\n      if (questions[i].id === thequestion.id) {\n        questions.splice(i, 1)\n      }\n    }\n    question.id = thequestion.id\n    question.type = type\n    question.text = text\n    question.time = time\n    question.value = value\n    question.image = image\n    question.video = video\n    question.answer = answer\n    questions.push(question)\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify({ questions })\n      });\n      alert('updated!')\n    } catch (err) {\n      alert(err)\n    }\n  }\n  var list1 = []\n  for (var i = 0; i < answer.length; i++) {\n    list1.push(1)\n  }\n  var [list, setList] = React.useState(list1);\n  const add = () => {\n    if (list.length === 6) {\n      alert('no more')\n    } else {\n      setList([...list, 1])\n    }\n  }\n  return <>\n    <div className='Title'><h1>Edit question</h1></div>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Type:</Form.Label>\n        <Form.Select value={type} onChange={e => setType(e.target.value)}>\n          <option>please choose question type</option>\n          <option>multiple choice</option>\n          <option>single choice</option>\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Control placeholder=\"text\" type='text' value={text} onChange={e => setText(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Time Limit: </Form.Label>\n        <Form.Control placeholder=\"number of minutes\" type='text' value={time} onChange={e => setTime(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Value: </Form.Label>\n        <Form.Control placeholder=\"number of question value\" type='text' value={value} onChange={e => setValue(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image: </Form.Label>\n        <Form.Control type=\"file\" value={image} accept=\"image/png, image/jpeg, image/jpg\" placeholder=\"question\" onChange={e => setImage(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Video: </Form.Label>\n        <Form.Control placeholder=\"url\" type='text' value={video} onChange={e => setVideo(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Row xs={1} md={2} className=\"g-4\">\n          {list.map((item, index) => (\n            <Col key={index}>\n              <Form.Control placeholder={`input your answer${index + 1}`} value={answer[index]} type='text' id={item} onChange={e => setAnswer(answer.map((item, ind) => { if (ind === index) {item = e.target.value } }))} />\n            </Col>\n          ))}\n        </Row>\n        <br/>\n        <Button variant=\"outline-secondary\" size='sm' type=\"submit\" onClick={add}>Add more</Button>\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\" onClick={updata}>Update</Button>\n    </div>\n  </>\n}\nexport default Editquestion;\n"]},"metadata":{},"sourceType":"module"}