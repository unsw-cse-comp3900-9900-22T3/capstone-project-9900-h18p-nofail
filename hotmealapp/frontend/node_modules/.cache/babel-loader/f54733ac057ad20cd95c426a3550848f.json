{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Newquestion() {\n  _s();\n\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = new Object();\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n\n  const getquiz = async id => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const questions = data.questions;\n    localStorage.setItem('questions', JSON.stringify(questions));\n  };\n\n  getquiz(id);\n  questions = JSON.parse(localStorage.getItem('questions'));\n\n  const create = async () => {\n    question.type = type;\n    question.text = text;\n    question.time = time;\n    question.value = value;\n    question.image = image;\n    question.answer = answer;\n    questions.push(question);\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      },\n      body: JSON.stringify(questions)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), \"Question Type: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setType(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 81\n    }, this), \"Question: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 76\n    }, this), \"Time Limit: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 78\n    }, this), \"Question Value: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 83\n    }, this), \"Image or Video: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setImage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 83\n    }, this), \"Answer: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: create,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Newquestion, \"QpgrjAPycdCqsnePjcFW0akZpzA=\", false, function () {\n  return [useParams];\n});\n\n_c = Newquestion;\nexport default Newquestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newquestion\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx"],"names":["React","useParams","Newquestion","params","id","quizid","token","localStorage","getItem","questions","useState","question","Object","type","setType","text","setText","time","setTime","value","setValue","image","setImage","answer","setAnswer","getquiz","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","parse","create","push","body","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction Newquestion () {\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = new Object;\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const getquiz = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const questions = data.questions\n    localStorage.setItem('questions', JSON.stringify(questions))\n  }\n  getquiz(id)\n  questions = JSON.parse(localStorage.getItem('questions'))\n  const create = async () => {\n    question.type = type\n    question.text = text\n    question.time = time\n    question.value = value\n    question.image = image\n    question.answer = answer\n    questions.push(question)\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n      body: JSON.stringify(questions)\n    });\n  }\n\n  return <>\n    <div className='Title'><h1>Create new question</h1></div>\n    Question Type: <input type='text' onChange={e => setType(e.target.value)} /><br />\n    Question: <input type='text' onChange={e => setText(e.target.value)} /><br />\n    Time Limit: <input type='text' onChange={e => setTime(e.target.value)} /><br />\n    Question Value: <input type='text' onChange={e => setValue(e.target.value)} /><br />\n    Image or Video: <input type='text' onChange={e => setImage(e.target.value)} /><br />\n    Answer: <input type='text' onChange={e => setAnswer(e.target.value)} /><br />\n    <button onClick={create}>Create</button>\n  </>\n}\nexport default Newquestion;\n"]},"metadata":{},"sourceType":"module"}