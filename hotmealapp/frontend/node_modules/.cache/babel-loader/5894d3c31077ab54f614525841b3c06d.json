{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Newquestion() {\n  _s();\n\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n\n  const getquiz = async id => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const questions = data.questions;\n    localStorage.setItem('questions', JSON.stringify(questions));\n  };\n\n  getquiz(id);\n  questions = JSON.parse(localStorage.getItem('questions'));\n\n  const create = async () => {\n    question.type = type;\n    question.text = text;\n    question.time = time;\n    question.value = value;\n    question.image = image;\n    question.answer = answer;\n    questions.push(question);\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      },\n      body: JSON.stringify(questions)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"please choose question type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"multiple choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"single choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"question\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Time Limit: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"question\",\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"question\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image or Video: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          accept: \"image/png, image/jpeg, image/jpg\",\n          placeholder: \"question\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"question\",\n          onChange: e => setAnswer(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: create,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Newquestion, \"QpgrjAPycdCqsnePjcFW0akZpzA=\", false, function () {\n  return [useParams];\n});\n\n_c = Newquestion;\nexport default Newquestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newquestion\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx"],"names":["React","useParams","Form","Button","Newquestion","params","id","quizid","token","localStorage","getItem","questions","useState","question","type","setType","text","setText","time","setTime","value","setValue","image","setImage","answer","setAnswer","getquiz","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","parse","create","push","body","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n  Button,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Newquestion () {\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const getquiz = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const questions = data.questions\n    localStorage.setItem('questions', JSON.stringify(questions))\n  }\n  getquiz(id)\n  questions = JSON.parse(localStorage.getItem('questions'))\n  const create = async () => {\n    question.type = type\n    question.text = text\n    question.time = time\n    question.value = value\n    question.image = image\n    question.answer = answer\n    questions.push(question)\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n      body: JSON.stringify(questions)\n    });\n  }\n\n  return <>\n    <div className='Title'><h1>Create new question</h1></div>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Type:</Form.Label>\n        <Form.Select onChange={e => setType(e.target.value)}>\n          <option>please choose question type</option>\n          <option>multiple choice</option>\n          <option>single choice</option>\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Control placeholder=\"question\" onChange={e => setText(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Time Limit: </Form.Label>\n        <Form.Control placeholder=\"question\" onChange={e => setTime(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Value: </Form.Label>\n        <Form.Control placeholder=\"question\" onChange={e => setValue(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image or Video: </Form.Label>\n        <Form.Control type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" placeholder=\"question\" onChange={e => setImage(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Form.Control placeholder=\"question\" onChange={e => setAnswer(e.target.value)} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" onClick={create}>Create</Button>\n    </div>\n  </>\n}\nexport default Newquestion;\n"]},"metadata":{},"sourceType":"module"}