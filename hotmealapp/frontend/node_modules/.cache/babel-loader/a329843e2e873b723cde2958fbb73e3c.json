{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Play() {\n  _s();\n\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid;\n  const playerid = localStorage.getItem('playerid');\n  var theanswers = React.useState([]);\n  const [answer, setAnswer] = React.useState([]);\n\n  const getsession = async id => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data));\n  };\n\n  var rightanswer = React.useState([]);\n\n  const getanswer = async () => {\n    const response = await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    localStorage.setItem('rightanswer', JSON.stringify(data));\n  };\n\n  const uploadanswer = async () => {\n    var answerIds = [];\n\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i);\n        }\n      }\n    }\n\n    await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        answerIds\n      })\n    });\n  };\n\n  getsession(sessionid);\n  const session = JSON.parse(localStorage.getItem('session'));\n  const position = session.results.position;\n  const question = session.results.questions[position];\n  var show = React.useState('none');\n  var show1 = React.useState('none');\n\n  if (question.type === 'single choice') {\n    show = 'block';\n    show1 = 'none';\n  } else {\n    show1 = 'block';\n    show = 'none';\n  }\n\n  const ifshow = {\n    display: show\n  };\n  const ifshow1 = {\n    display: show1\n  };\n  theanswers = question.answer;\n  const time = question.time * 60;\n  const [timerID, setTimerID] = React.useState(null);\n  const [counter, setCounter] = React.useState(time);\n  React.useEffect(() => {\n    if (counter > 0) {\n      const timer = setTimeout(() => {\n        setCounter(counter - 1);\n      }, 1000);\n      setTimerID(timer);\n    } else {\n      getanswer();\n      rightanswer = JSON.parse(localStorage.getItem('rightanswer'));\n    }\n\n    return () => {\n      setTimerID(null);\n    };\n  }, [counter]);\n  console.log(timerID);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"your time:\", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        style: ifshow,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Choose your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: e => {\n            setAnswer(e.target.value);\n            uploadanswer();\n          },\n          children: theanswers.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        style: ifshow1,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Choose your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), theanswers.map((item, index) => /*#__PURE__*/_jsxDEV(Form.Check, {\n          label: item,\n          type: \"checkbox\"\n        }, index + 10, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: \"rightanswer.answerIds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Play, \"IvawrxRDUDnb4qs1OhHP2AR5bH4=\", false, function () {\n  return [useParams];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx"],"names":["React","useParams","Form","Play","params","token","localStorage","getItem","sessionid","playerid","theanswers","useState","answer","setAnswer","getsession","id","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","rightanswer","getanswer","uploadanswer","answerIds","i","question","length","j","push","body","session","parse","position","results","questions","show","show1","type","ifshow","display","ifshow1","time","timerID","setTimerID","counter","setCounter","useEffect","timer","setTimeout","console","log","text","image","e","target","value","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SACEC,IADF,QAEO,iBAFP;AAGA,OAAO,sCAAP;;;;AAEA,SAASC,IAAT,GAAiB;AAAA;;AACf,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,SAAS,GAAGJ,MAAM,CAACI,SAAzB;AACA,QAAMC,QAAQ,GAAGH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,MAAIG,UAAU,GAAGV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAjB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,KAAK,CAACW,QAAN,CAAe,EAAf,CAA5B;;AACA,QAAMG,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyCF,EAAzC,GAA8C,SAA/C,EAA0D;AACpFG,MAAAA,MAAM,EAAE,KAD4E;AAEpFC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,YAAYf;AAFpB;AAF2E,KAA1D,CAA5B;AAOA,UAAMgB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB,SAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAhC;AACD,GAVD;;AAWA,MAAIK,WAAW,GAAG1B,KAAK,CAACW,QAAN,CAAe,EAAf,CAAlB;;AACA,QAAMgB,SAAS,GAAG,YAAY;AAC5B,UAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgCR,QAAhC,GAA2C,SAA5C,EAAuD;AACjFS,MAAAA,MAAM,EAAE,KADyE;AAEjFC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFwE,KAAvD,CAA5B;AAMA,UAAME,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACAhB,IAAAA,YAAY,CAACiB,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAApC;AACD,GATD;;AAUA,QAAMO,YAAY,GAAG,YAAY;AAC/B,QAAIC,SAAS,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,QAAQ,CAACnB,MAAT,CAAgBoB,MAApC,EAA4CF,CAAC,EAA7C,EAAiD;AAC/C,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrB,MAAM,CAACoB,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;AACtC,YAAIrB,MAAM,CAACqB,CAAD,CAAN,KAAcF,QAAQ,CAACnB,MAAT,CAAgBkB,CAAhB,CAAlB,EAAsC;AACpCD,UAAAA,SAAS,CAACK,IAAV,CAAeJ,CAAf;AACD;AACF;AACF;;AACD,UAAMb,KAAK,CAAC,gCAAgCR,QAAhC,GAA2C,SAA5C,EAAuD;AAChES,MAAAA,MAAM,EAAE,KADwD;AAEhEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFuD;AAKhEgB,MAAAA,IAAI,EAAEX,IAAI,CAACC,SAAL,CAAe;AACnBI,QAAAA;AADmB,OAAf;AAL0D,KAAvD,CAAX;AASD,GAlBD;;AAmBAf,EAAAA,UAAU,CAACN,SAAD,CAAV;AACA,QAAM4B,OAAO,GAAGZ,IAAI,CAACa,KAAL,CAAW/B,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAhB;AACA,QAAM+B,QAAQ,GAAGF,OAAO,CAACG,OAAR,CAAgBD,QAAjC;AACA,QAAMP,QAAQ,GAAGK,OAAO,CAACG,OAAR,CAAgBC,SAAhB,CAA0BF,QAA1B,CAAjB;AACA,MAAIG,IAAI,GAAGzC,KAAK,CAACW,QAAN,CAAe,MAAf,CAAX;AACA,MAAI+B,KAAK,GAAG1C,KAAK,CAACW,QAAN,CAAe,MAAf,CAAZ;;AACA,MAAIoB,QAAQ,CAACY,IAAT,KAAkB,eAAtB,EAAuC;AACrCF,IAAAA,IAAI,GAAG,OAAP;AACAC,IAAAA,KAAK,GAAG,MAAR;AACD,GAHD,MAGO;AACLA,IAAAA,KAAK,GAAG,OAAR;AACAD,IAAAA,IAAI,GAAG,MAAP;AACD;;AACD,QAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAEJ;AADI,GAAf;AAGA,QAAMK,OAAO,GAAG;AACdD,IAAAA,OAAO,EAAEH;AADK,GAAhB;AAGAhC,EAAAA,UAAU,GAAGqB,QAAQ,CAACnB,MAAtB;AACA,QAAMmC,IAAI,GAAGhB,QAAQ,CAACgB,IAAT,GAAgB,EAA7B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjD,KAAK,CAACW,QAAN,CAAe,IAAf,CAA9B;AACA,QAAM,CAACuC,OAAD,EAAUC,UAAV,IAAwBnD,KAAK,CAACW,QAAN,CAAeoC,IAAf,CAA9B;AACA/C,EAAAA,KAAK,CAACoD,SAAN,CAAgB,MAAM;AACpB,QAAIF,OAAO,GAAG,CAAd,EAAiB;AACf,YAAMG,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BH,QAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,OAFuB,EAErB,IAFqB,CAAxB;AAGAD,MAAAA,UAAU,CAACI,KAAD,CAAV;AACD,KALD,MAKO;AACL1B,MAAAA,SAAS;AACTD,MAAAA,WAAW,GAAGF,IAAI,CAACa,KAAL,CAAW/B,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAd;AACD;;AACD,WAAO,MAAM;AACX0C,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAFD;AAGD,GAbD,EAaG,CAACC,OAAD,CAbH;AAcAK,EAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,sBAAO;AAAA,4BACL;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAA,+BACaE,OADb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,eAKL;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAYnB,QAAQ,CAAC0B;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAE1B,QAAQ,CAAC2B;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEd,MAAnB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAYb,QAAQ,CAACY;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,QAAQ,EAAEgB,CAAC,IAAI;AAAE9C,YAAAA,SAAS,CAAC8C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA2BjC,YAAAA,YAAY;AAAI,WAAzE;AAAA,oBACGlB,UAAU,CAACoD,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd;AAAA,sBAAqBD;AAArB,aAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAkBE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAElB,OAAnB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oBAAYf,QAAQ,CAACY;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGjC,UAAU,CAACoD,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACd,QAAC,IAAD,CAAM,KAAN;AACA,UAAA,KAAK,EAAED,IADP;AAEA,UAAA,IAAI,EAAC;AAFL,WAGKC,KAAK,GAAG,EAHb;AAAA;AAAA;AAAA;AAAA,gBADD,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eA6BE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YALK;AAAA,kBAAP;AAwCD;;GA9HQ7D,I;UACQF,S;;;KADRE,I;AA+HT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Play () {\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid\n  const playerid = localStorage.getItem('playerid')\n  var theanswers = React.useState([]);\n  const [answer, setAnswer] = React.useState([]);\n  const getsession = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data))\n  }\n  var rightanswer = React.useState([])\n  const getanswer = async () => {\n    const response = await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n      },\n    })\n    const data = await response.json()\n    localStorage.setItem('rightanswer', JSON.stringify(data))\n  }\n  const uploadanswer = async () => {\n    var answerIds = []\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i)\n        }\n      }\n    }\n    await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        answerIds,\n      }),\n    })\n  }\n  getsession(sessionid)\n  const session = JSON.parse(localStorage.getItem('session'))\n  const position = session.results.position\n  const question = session.results.questions[position]\n  var show = React.useState('none');\n  var show1 = React.useState('none');\n  if (question.type === 'single choice') {\n    show = 'block'\n    show1 = 'none'\n  } else {\n    show1 = 'block'\n    show = 'none'\n  }\n  const ifshow = {\n    display: show\n  }\n  const ifshow1 = {\n    display: show1\n  }\n  theanswers = question.answer\n  const time = question.time * 60\n  const [timerID, setTimerID] = React.useState(null);\n  const [counter, setCounter] = React.useState(time);\n  React.useEffect(() => {\n    if (counter > 0) {\n      const timer = setTimeout(() => {\n        setCounter(counter - 1)\n      }, 1000);\n      setTimerID(timer)\n    } else {\n      getanswer()\n      rightanswer = JSON.parse(localStorage.getItem('rightanswer'))\n    }\n    return () => {\n      setTimerID(null)\n    }\n  }, [counter]);\n  console.log(timerID)\n  return <>\n    <div className='Title'><h1>Playing</h1></div>\n    <p>\n      your time:{counter}\n    </p>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Text>{question.text}</Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image: </Form.Label>\n        <img src={question.image} />\n      </Form.Group>\n      <Form.Group style={ifshow}>\n        <Form.Label>Choose your answer</Form.Label>\n        <Form.Text>{question.type}</Form.Text>\n        <Form.Select onChange={e => { setAnswer(e.target.value); uploadanswer() }}>\n          {theanswers.map((item, index) => (\n            <option key={index}>{item}</option>\n          ))}\n        </Form.Select>\n      </Form.Group>\n      <Form.Group style={ifshow1}>\n        <Form.Label>Choose your answer</Form.Label>\n        <Form.Text>{question.type}</Form.Text>\n        {theanswers.map((item, index) => (\n          <Form.Check\n          label={item}\n          type='checkbox'\n          key={index + 10}\n        />\n        ))}\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Form.Text>rightanswer.answerIds</Form.Text>\n      </Form.Group>\n    </div>\n  </>\n}\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}