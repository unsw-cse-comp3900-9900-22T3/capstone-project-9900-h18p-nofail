{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Newquestion() {\n  _s();\n\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const [video, setVideo] = React.useState('');\n\n  const getquiz = async id => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const questions = data.questions;\n    localStorage.setItem('questions', JSON.stringify(questions));\n  };\n\n  getquiz(id);\n  questions = JSON.parse(localStorage.getItem('questions'));\n\n  const create = async () => {\n    question.type = type;\n    question.text = text;\n    question.time = time;\n    question.value = value;\n    question.image = image;\n    question.video = video;\n    question.answer = answer;\n    questions.push(question);\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      },\n      body: JSON.stringify(questions)\n    });\n  };\n\n  var [list, setList] = React.useState([]);\n\n  const add = () => {\n    if (list.length === 4) {\n      alert('no more');\n    } else {\n      setList([...list, 1]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"please choose question type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"multiple choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"single choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"text\",\n          type: \"text\",\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Time Limit: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"number of minutes\",\n          type: \"text\",\n          onChange: e => setTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question Value: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"number of question value\",\n          type: \"text\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"file\",\n          accept: \"image/png, image/jpeg, image/jpg\",\n          placeholder: \"question\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Video: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          placeholder: \"url\",\n          type: \"text\",\n          onChange: e => setVideo(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          className: \"g-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"input your answer1\",\n              type: \"text\",\n              id: \"1\",\n              onChange: e => setAnswer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: \"input your answer2\",\n              type: \"text\",\n              id: \"2\",\n              onChange: e => setAnswer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this), list.map((item, index) => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: `input your answer${index + 3}`,\n              type: \"text\",\n              id: item,\n              onChange: e => setAnswer(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          size: \"sm\",\n          type: \"submit\",\n          onClick: add,\n          children: \"Add more\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        type: \"submit\",\n        onClick: create,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Newquestion, \"O1neNpDXv2B959FXmBsr5XKabIk=\", false, function () {\n  return [useParams];\n});\n\n_c = Newquestion;\nexport default Newquestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newquestion\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx"],"names":["React","useParams","Form","Button","Row","Col","Newquestion","params","id","quizid","token","localStorage","getItem","questions","useState","question","type","setType","text","setText","time","setTime","value","setValue","image","setImage","answer","setAnswer","video","setVideo","getquiz","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","parse","create","push","body","list","setList","add","length","alert","e","target","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Newquestion () {\n  const params = useParams();\n  const id = params.quizid;\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const [video, setVideo] = React.useState('');\n  const getquiz = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const questions = data.questions\n    localStorage.setItem('questions', JSON.stringify(questions))\n  }\n  getquiz(id)\n  questions = JSON.parse(localStorage.getItem('questions'))\n  const create = async () => {\n    question.type = type\n    question.text = text\n    question.time = time\n    question.value = value\n    question.image = image\n    question.video = video\n    question.answer = answer\n    questions.push(question)\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n      body: JSON.stringify(questions)\n    });\n  }\n  var [list, setList] = React.useState([]);\n  const add = () => {\n    if (list.length === 4) {\n      alert('no more')\n    } else {\n      setList([...list, 1])\n    }\n  }\n\n  return <>\n    <div className='Title'><h1>Create new question</h1></div>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Type:</Form.Label>\n        <Form.Select onChange={e => setType(e.target.value)}>\n          <option>please choose question type</option>\n          <option>multiple choice</option>\n          <option>single choice</option>\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Control placeholder=\"text\" type='text' onChange={e => setText(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Time Limit: </Form.Label>\n        <Form.Control placeholder=\"number of minutes\" type='text' onChange={e => setTime(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question Value: </Form.Label>\n        <Form.Control placeholder=\"number of question value\" type='text' onChange={e => setValue(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image: </Form.Label>\n        <Form.Control type=\"file\" accept=\"image/png, image/jpeg, image/jpg\" placeholder=\"question\" onChange={e => setImage(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Video: </Form.Label>\n        <Form.Control placeholder=\"url\" type='text' onChange={e => setVideo(e.target.value)} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Row xs={1} md={2} className=\"g-4\">\n          <Col><Form.Control placeholder='input your answer1' type='text' id='1' onChange={e => setAnswer(e.target.value)} /></Col>\n          <Col><Form.Control placeholder='input your answer2' type='text' id='2' onChange={e => setAnswer(e.target.value)} /></Col>\n          {list.map((item, index) => (\n            <Col key={index}>\n              <Form.Control placeholder={`input your answer${index + 3}`} type='text' id={item} onChange={e => setAnswer(e.target.value)} />\n            </Col>\n          ))}\n        </Row>\n        <br/>\n        <Button variant=\"outline-secondary\" size='sm' type=\"submit\" onClick={add}>Add more</Button>\n      </Form.Group>\n      <Button variant=\"success\" type=\"submit\" onClick={create}>Create</Button>\n    </div>\n  </>\n}\nexport default Newquestion;\n"]},"metadata":{},"sourceType":"module"}