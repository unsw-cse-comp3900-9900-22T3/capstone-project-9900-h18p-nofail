{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n    } catch (err) {\n      alert(err);\n    }\n\n    setTimeout(location.reload(true), 2000);\n  };\n\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const body = data.quizzes;\n    const num = body.length;\n    const quizzes1 = [];\n\n    for (var i = 0; i < num; i++) {\n      const getquiz = async id => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        });\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data));\n      };\n\n      await getquiz(body[i].id);\n      const quiz = localStorage.getItem('quiz');\n      quizzes1.push(JSON.parse(quiz));\n    }\n\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1));\n    console.log(quizzes1);\n  };\n\n  function renderdash() {\n    getquizzes();\n    quizzes = JSON.parse(localStorage.getItem('quizzes'));\n    console.log(quizzes);\n  }\n\n  renderdash();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: quiz.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: quiz.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"questions: \", quiz.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, quiz.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \"Quiz name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"NFdY046vTiddyyjWvtKweU/Vsy8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx"],"names":["React","useNavigate","Card","Row","Col","Button","Dashboard","navigate","name","setName","useState","quizzes","token","localStorage","getItem","useEffect","createQuiz","fetch","method","headers","Authorization","body","JSON","stringify","err","alert","setTimeout","location","reload","getquizzes","response","data","json","num","length","quizzes1","i","getquiz","id","setItem","quiz","push","parse","console","log","renderdash","map","thumbnail","questions","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Dashboard () {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login')\n    }\n  });\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify({ name }),\n      });\n    } catch (err) {\n      alert(err)\n    }\n    setTimeout(location.reload(true), 2000)\n  }\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const body = data.quizzes\n    const num = body.length\n    const quizzes1 = []\n    for (var i = 0; i < num; i++) {\n      const getquiz = async (id) => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token,\n          }\n        })\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data))\n      }\n      await getquiz(body[i].id);\n      const quiz = localStorage.getItem('quiz')\n      quizzes1.push(JSON.parse(quiz));\n    }\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1))\n    console.log(quizzes1)\n  }\n\n  function renderdash () {\n    getquizzes()\n    quizzes = JSON.parse(localStorage.getItem('quizzes'))\n    console.log(quizzes)\n  }\n  renderdash()\n\n  return (\n    <>\n      <h1>Dashboard</h1>\n      <Row xs={1} md={4} className=\"g-4\">\n        {quizzes.map(quiz => (\n          <Col key={quiz.name}>\n            <Card>\n              <Card.Img variant=\"top\" src={quiz.thumbnail} />\n              <Card.Body>\n                <Card.Title>{quiz.name}</Card.Title>\n                <Card.Text>\n                  questions: {quiz.questions.length}\n                </Card.Text>\n                <Button variant=\"primary\">Edit</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <br />\n      Quiz name: <input type=\"text\" onChange={e => setName(e.target.value)}></input>\n      <button onClick={createQuiz}>Create</button>\n    </>);\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}