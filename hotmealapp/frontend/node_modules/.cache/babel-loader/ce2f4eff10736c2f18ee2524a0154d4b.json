{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  try {\n    const response = fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = response.json();\n    const body = data.body.quizzes;\n    const num = body.length;\n    const quizzes = [];\n\n    for (var i = 0; i < num; i++) {\n      const id = body[i].id;\n      const response = fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      data = response.body;\n      quizzes.push(data);\n    }\n  } catch (err) {\n    alert(err);\n    console.log(err);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: quiz.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: quiz.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"questions: \", quiz.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), \"Quiz name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"qhCjx21NJ6eV6+zMxrGGkJB5gkM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx"],"names":["React","useNavigate","Card","Row","Col","Dashboard","navigate","name","setName","useState","token","localStorage","getItem","useEffect","createQuiz","fetch","method","headers","Authorization","body","JSON","stringify","err","alert","response","data","json","quizzes","num","length","i","id","push","console","log","map","quiz","thumbnail","questions","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,QAIO,iBAJP;AAKA,OAAO,sCAAP;;;;AAEA,SAASC,SAAT,GAAsB;AAAA;;AACpB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACH,KAAL,EAAY;AACVJ,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,GAJD;;AAKA,QAAMQ,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMC,KAAK,CAAC,sCAAD,EAAyC;AAClDC,QAAAA,MAAM,EAAE,MAD0C;AAElDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYR;AAFpB,SAFyC;AAMlDS,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,UAAAA;AAAF,SAAf;AAN4C,OAAzC,CAAX;AAQD,KATD,CASE,OAAOe,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD;AACF,GAbD;;AAcA,MAAI;AACF,UAAME,QAAQ,GAAGT,KAAK,CAAC,kCAAD,EAAqC;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAE,YAAYR;AAFpB;AAFgD,KAArC,CAAtB;AAOA,UAAMe,IAAI,GAAGD,QAAQ,CAACE,IAAT,EAAb;AACA,UAAMP,IAAI,GAAGM,IAAI,CAACN,IAAL,CAAUQ,OAAvB;AACA,UAAMC,GAAG,GAAGT,IAAI,CAACU,MAAjB;AACA,UAAMF,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC5B,YAAMC,EAAE,GAAGZ,IAAI,CAACW,CAAD,CAAJ,CAAQC,EAAnB;AACA,YAAMP,QAAQ,GAAGT,KAAK,CAAC,sCAAoCgB,EAArC,EAAyC;AAC7Df,QAAAA,MAAM,EAAE,KADqD;AAE7DC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAE,YAAYR;AAFpB;AAFoD,OAAzC,CAAtB;AAOAe,MAAAA,IAAI,GAAGD,QAAQ,CAACL,IAAhB;AACAQ,MAAAA,OAAO,CAACK,IAAR,CAAaP,IAAb;AACD;AAEF,GAzBD,CAyBE,OAAOH,GAAP,EAAY;AACZC,IAAAA,KAAK,CAACD,GAAD,CAAL;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,GAAZ;AACD;;AACD,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAmB,MAAA,SAAS,EAAC,KAA7B;AAAA,gBACGK,OAAO,CAACQ,GAAR,CAAYC,IAAI,iBACf,QAAC,GAAD;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,IAAD,CAAM,GAAN;AAAU,YAAA,OAAO,EAAC,KAAlB;AAAwB,YAAA,GAAG,EAAEA,IAAI,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA,wBAAaD,IAAI,CAAC7B;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,wCACc6B,IAAI,CAACE,SAAL,CAAeT,MAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,8BAiBa;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEU,CAAC,IAAI/B,OAAO,CAAC+B,CAAC,CAACC,MAAF,CAASC,KAAV;AAAzC;AAAA;AAAA;AAAA;AAAA,YAjBb,eAkBE;AAAQ,MAAA,OAAO,EAAE3B,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAqBD;;GAzEQT,S;UACUJ,W;;;KADVI,S;AA2ET,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Dashboard () {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login')\n    }\n  });\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify({ name }),\n      });\n    } catch (err) {\n      alert(err)\n    }\n  }\n  try {\n    const response = fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = response.json();\n    const body = data.body.quizzes;\n    const num = body.length;\n    const quizzes = [];\n    for (var i = 0; i < num; i++) {\n      const id = body[i].id\n      const response = fetch('http://localhost:5005/admin/quiz/'+id, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      })\n      data = response.body;\n      quizzes.push(data);\n    }\n    \n  } catch (err) {\n    alert(err)\n    console.log(err)\n  }\n  return (\n    <>\n      <h1>Dashboard</h1>\n      <Row xs={1} md={2} className=\"g-4\">\n        {quizzes.map(quiz => (\n          <Col>\n            <Card>\n              <Card.Img variant=\"top\" src={quiz.thumbnail} />\n              <Card.Body>\n                <Card.Title>{quiz.name}</Card.Title>\n                <Card.Text>\n                  questions: {quiz.questions.length}\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      Quiz name: <input type=\"text\" onChange={e => setName(e.target.value)}></input>\n      <button onClick={createQuiz}>Create</button>\n    </>);\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}