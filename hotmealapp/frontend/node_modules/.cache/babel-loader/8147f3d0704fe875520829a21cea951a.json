{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Play() {\n  _s();\n\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid;\n  const playerid = localStorage.getItem('playerid');\n  const [show, setShow] = React.useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [answer, setAnswer] = React.useState([]);\n  const [timing, setTiming] = React.useState(false);\n  const [second, setSecond] = React.useState(10);\n  React.useEffect(() => {\n    let timer;\n\n    function countdown() {\n      setSecond(preSecond => {\n        if (preSecond <= 1) {\n          setTiming(false);\n          return COUNTDOWN_SECONDS;\n        } else {\n          timer = setTimeout(countdown, 1000);\n          return preSecond - 1;\n        }\n      });\n    }\n\n    if (timing) {\n      timer = setTimeout(countdown, 1000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [timing]);\n\n  const getsession = async id => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data));\n  };\n\n  const uploadanswer = async () => {\n    var answerIds = [];\n\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i);\n        }\n      }\n    }\n\n    const response = await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        answerIds\n      })\n    });\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data));\n  };\n\n  getsession(sessionid);\n  const session = JSON.parse(localStorage.getItem('session'));\n  const question = session.questions[session.position];\n  const time = question.time;\n\n  if (question.type === 'multiple choice') {\n    handleClose();\n  } else {\n    handleShow();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Playing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: timing,\n      onClick: () => setTiming(true),\n      children: timing ? \"Timing \" + second : \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Image: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Choose your answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: question.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          show: show,\n          onChange: e => {\n            setAnswer(e.target.value);\n            uploadanswer(e);\n          },\n          children: question.answer.map((item, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          show: !show,\n          multiple: \"multiple\",\n          onChange: e => {\n            setAnswer(e.target.value);\n            uploadanswer(e);\n          },\n          children: question.answer.map((item, index) => {\n            /*#__PURE__*/\n            _jsxDEV(\"option\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Answer: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Play, \"m06TClR/TUvpF/X/qVgEzLUY820=\", false, function () {\n  return [useParams];\n});\n\n_c = Play;\nexport default Play;\n\nvar _c;\n\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Play.jsx"],"names":["React","useParams","Form","Play","params","token","localStorage","getItem","sessionid","playerid","show","setShow","useState","handleClose","handleShow","answer","setAnswer","timing","setTiming","second","setSecond","useEffect","timer","countdown","preSecond","COUNTDOWN_SECONDS","setTimeout","clearTimeout","getsession","id","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","uploadanswer","answerIds","i","question","length","j","push","body","session","parse","questions","position","time","type","text","image","e","target","value","map","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Form,\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Play () {\n  const params = useParams();\n  const token = localStorage.getItem('token');\n  const sessionid = params.sessionid\n  const playerid = localStorage.getItem('playerid')\n  const [show, setShow] = React.useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [answer, setAnswer] = React.useState([]);\n  const [timing, setTiming] = React.useState(false);\n  const [second, setSecond] = React.useState(10);\n  React.useEffect(() => {\n    let timer;\n    function countdown() {\n      setSecond((preSecond) => {\n        if (preSecond <= 1) {\n          setTiming(false);\n          return COUNTDOWN_SECONDS;\n        } else {\n          timer = setTimeout(countdown, 1000);\n          return preSecond - 1;\n        }\n      });\n    }\n    if (timing) {\n      timer = setTimeout(countdown, 1000);\n    }\n    return () => clearTimeout(timer);\n  }, [timing]);\n  const getsession = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/session/' + id + '/status', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data))\n  }\n  const uploadanswer = async () => {\n    var answerIds = []\n    for (var i = 0; i < question.answer.length; i++) {\n      for (var j = 0; j < answer.length; j++) {\n        if (answer[j] === question.answer[i]) {\n          answerIds.push(i)\n        }\n      }\n    }\n    const response = await fetch('http://localhost:5005/play/' + playerid + '/answer', {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        answerIds,\n      }),\n    })\n    const data = await response.json();\n    localStorage.setItem('session', JSON.stringify(data))\n  }\n  getsession(sessionid)\n  const session = JSON.parse(localStorage.getItem('session'))\n  const question = session.questions[session.position]\n  const time = question.time\n  if (question.type === 'multiple choice') {\n    handleClose()\n  } else {\n    handleShow()\n  }\n  return <>\n    <div className='Title'><h1>Playing</h1></div>\n    <button disabled={timing} onClick={() => setTiming(true)}>\n      {timing ? \"Timing \" + second : \"Go\"}\n    </button>\n    <div className='Container'>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Question: </Form.Label>\n        <Form.Text>{question.text}</Form.Text>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Image: </Form.Label>\n        <img src={question.image} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Choose your answer</Form.Label>\n        <Form.Text>{question.type}</Form.Text>\n        <Form.Select show={show} onChange={e => {setAnswer(e.target.value); uploadanswer(e)}}>\n          {question.answer.map((item, index) => {\n            <option key={index}>{item}</option>\n          })}\n        </Form.Select>\n        <Form.Select show={!show} multiple='multiple' onChange={e => {setAnswer(e.target.value); uploadanswer(e)}}>\n          {question.answer.map((item, index) => {\n            <option key={index}>{item}</option>\n          })}\n        </Form.Select>\n      </Form.Group>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Answer: </Form.Label>\n        <Form.Text></Form.Text>\n      </Form.Group>\n    </div>\n  </>\n}\nexport default Play;\n"]},"metadata":{},"sourceType":"module"}