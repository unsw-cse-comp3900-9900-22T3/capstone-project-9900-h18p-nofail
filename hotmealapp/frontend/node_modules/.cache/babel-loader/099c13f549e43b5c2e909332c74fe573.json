{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Newquestion() {\n  _s();\n\n  const params = useParams();\n  const id = params.quizid;\n  console.log(id);\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n\n  const getquiz = async id => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const questions = data.questions;\n    localStorage.setItem('questions', JSON.stringify(questions));\n  };\n\n  getquiz(id);\n  questions = JSON.parse(localStorage.getItem('questions'));\n\n  const create = async () => {\n    question.type = type;\n    question.text = text;\n    question.time = time;\n    question.value = value;\n    question.image = image;\n    question.answer = answer;\n    questions.push(question);\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      },\n      body: JSON.stringify(questions)\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create new question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      id: \"demo-row-radio-buttons-group-label\",\n      children: \"Question Type:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n      row: true,\n      \"aria-labelledby\": \"demo-controlled-radio-buttons-group\",\n      name: \"controlled-radio-buttons-group\",\n      value: value,\n      onChange: e => setType(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"m\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 44\n        }, this),\n        label: \"m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: \"s\",\n        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 44\n        }, this),\n        label: \"s\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), \"Question: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 76\n    }, this), \"Time Limit: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 78\n    }, this), \"Question Value: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 83\n    }, this), \"Image or Video: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setImage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 83\n    }, this), \"Answer: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setAnswer(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: create,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Newquestion, \"QpgrjAPycdCqsnePjcFW0akZpzA=\", false, function () {\n  return [useParams];\n});\n\n_c = Newquestion;\nexport default Newquestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newquestion\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Newquestion.jsx"],"names":["React","useParams","RadioGroup","FormControlLabel","Radio","Newquestion","params","id","quizid","console","log","token","localStorage","getItem","questions","useState","question","type","setType","text","setText","time","setTime","value","setValue","image","setImage","answer","setAnswer","getquiz","response","fetch","method","headers","Authorization","data","json","setItem","JSON","stringify","parse","create","push","body","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from '@mui/material';\n\nfunction Newquestion () {\n  const params = useParams();\n  const id = params.quizid;\n  console.log(id)\n  const token = localStorage.getItem('token');\n  var questions = React.useState('');\n  var question = {};\n  const [type, setType] = React.useState('');\n  const [text, setText] = React.useState('');\n  const [time, setTime] = React.useState('');\n  const [value, setValue] = React.useState('');\n  const [image, setImage] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const getquiz = async (id) => {\n    const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const questions = data.questions\n    localStorage.setItem('questions', JSON.stringify(questions))\n  }\n  getquiz(id)\n  questions = JSON.parse(localStorage.getItem('questions'))\n  const create = async () => {\n    question.type = type\n    question.text = text\n    question.time = time\n    question.value = value\n    question.image = image\n    question.answer = answer\n    questions.push(question)\n    await fetch('http://localhost:5005/admin/quiz' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      },\n      body: JSON.stringify(questions)\n    });\n  }\n\n  return <>\n    <div className='Title'><h1>Create new question</h1></div>\n    <FormLabel id=\"demo-row-radio-buttons-group-label\">Question Type:</FormLabel>\n    <RadioGroup\n      row\n      aria-labelledby=\"demo-controlled-radio-buttons-group\"\n      name=\"controlled-radio-buttons-group\"\n      value={value}\n      onChange={e => setType(e.target.value)}\n    >\n      <FormControlLabel value=\"m\" control={<Radio />} label=\"m\" />\n      <FormControlLabel value=\"s\" control={<Radio />} label=\"s\" />\n    </RadioGroup>\n    Question: <input type='text' onChange={e => setText(e.target.value)} /><br />\n    Time Limit: <input type='text' onChange={e => setTime(e.target.value)} /><br />\n    Question Value: <input type='text' onChange={e => setValue(e.target.value)} /><br />\n    Image or Video: <input type='text' onChange={e => setImage(e.target.value)} /><br />\n    Answer: <input type='text' onChange={e => setAnswer(e.target.value)} /><br />\n    <button onClick={create}>Create</button>\n  </>\n}\nexport default Newquestion;\n"]},"metadata":{},"sourceType":"module"}