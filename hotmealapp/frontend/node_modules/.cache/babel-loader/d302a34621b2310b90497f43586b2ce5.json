{"ast":null,"code":"var _jsxFileName = \"/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, Row, Col, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Dashboard() {\n  _s();\n\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login');\n    }\n  });\n\n  function sum(arr) {\n    var s = 0;\n\n    for (var i = 0; i < arr.length; i++) {\n      s += arr[i].time;\n    }\n\n    return s;\n  }\n\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n      fresh();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const deleteQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      fresh();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const startQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/start', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      handleShow();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const stopQuiz = async id => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/stop', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      });\n      fresh();\n    } catch (err) {\n      alert(err);\n    }\n  };\n\n  const [show, setShow] = setState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    const body = data.quizzes;\n    const num = body.length;\n    const quizzes1 = [];\n\n    for (var i = 0; i < num; i++) {\n      const getquiz = async id => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token\n          }\n        });\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data));\n        localStorage.setItem('id', JSON.stringify(id));\n      };\n\n      await getquiz(body[i].id);\n      var quiz = localStorage.getItem('quiz');\n      quiz = JSON.parse(quiz);\n      quiz.id = localStorage.getItem('id');\n      quizzes1.push(quiz);\n    }\n\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1));\n  };\n\n  function renderdash() {\n    getquizzes();\n    quizzes = JSON.parse(localStorage.getItem('quizzes'));\n  }\n\n  const fresh = async () => {\n    await getquizzes();\n    location.reload();\n  };\n\n  renderdash();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal heading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Woohoo, you're reading this text in a modal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 4,\n      className: \"g-4\",\n      children: quizzes.map(quiz => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: quiz.thumbnail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: quiz.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"questions: \", quiz.questions.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [\"finish time: \", sum(quiz.questions)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                size: \"sm\",\n                href: `/editquiz${quiz.id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-secondary\",\n                size: \"sm\",\n                onClick: e => deleteQuiz(quiz.id, e),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                size: \"sm\",\n                onClick: e => startQuiz(quiz.id, e),\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"link\",\n                size: \"sm\",\n                onClick: e => stopQuiz(quiz.id, e),\n                children: \"Stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, quiz.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), \"Quiz name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createQuiz,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), \"Quiz id: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => deleteQuiz(id, e),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"lWLSLbA6fRtUkehR3BvpRXsfBg8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/shixinyi/Desktop/6080/ass3/frontend/src/pages/Dashboard.jsx"],"names":["React","useNavigate","Card","Row","Col","Button","Dashboard","navigate","name","setName","useState","id","setId","quizzes","token","localStorage","getItem","useEffect","sum","arr","s","i","length","time","createQuiz","fetch","method","headers","Authorization","body","JSON","stringify","fresh","err","alert","deleteQuiz","startQuiz","handleShow","stopQuiz","show","setShow","setState","handleClose","getquizzes","response","data","json","num","quizzes1","getquiz","setItem","quiz","parse","push","renderdash","location","reload","map","thumbnail","questions","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n  Button\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction Dashboard () {\n  const navigate = useNavigate();\n  const [name, setName] = React.useState('');\n  const [id, setId] = React.useState('');\n  var quizzes = React.useState('');\n  const token = localStorage.getItem('token');\n  React.useEffect(() => {\n    if (!token) {\n      navigate('/login')\n    }\n  });\n  function sum (arr) {\n    var s = 0\n    for (var i = 0; i < arr.length; i++) {\n      s += arr[i].time\n    }\n    return s\n  }\n  const createQuiz = async () => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/new', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        },\n        body: JSON.stringify({ name }),\n      });\n      fresh()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const deleteQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id, {\n        method: 'DELETE',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      fresh()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const startQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/start', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      handleShow()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const stopQuiz = async (id) => {\n    try {\n      await fetch('http://localhost:5005/admin/quiz/' + id + '/stop', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer ' + token,\n        }\n      });\n      fresh()\n    } catch (err) {\n      alert(err)\n    }\n  }\n  const [show, setShow] = setState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const getquizzes = async () => {\n    const response = await fetch('http://localhost:5005/admin/quiz', {\n      method: 'GET',\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: 'Bearer ' + token,\n      }\n    })\n    const data = await response.json();\n    const body = data.quizzes\n    const num = body.length\n    const quizzes1 = []\n    for (var i = 0; i < num; i++) {\n      const getquiz = async (id) => {\n        const response = await fetch('http://localhost:5005/admin/quiz/' + id, {\n          method: 'GET',\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer ' + token,\n          }\n        })\n        const data = await response.json();\n        localStorage.setItem('quiz', JSON.stringify(data))\n        localStorage.setItem('id', JSON.stringify(id))\n      }\n      await getquiz(body[i].id);\n      var quiz = localStorage.getItem('quiz')\n      quiz = JSON.parse(quiz)\n      quiz.id = localStorage.getItem('id')\n      quizzes1.push(quiz);\n    }\n    localStorage.setItem('quizzes', JSON.stringify(quizzes1))\n  }\n  function renderdash () {\n    getquizzes()\n    quizzes = JSON.parse(localStorage.getItem('quizzes'))\n  }\n  const fresh = async () => {\n    await getquizzes()\n    location.reload()\n  }\n  renderdash()\n\n  return (\n    <>\n      <div className='Title'><h1>Dashboard</h1></div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Row xs={1} md={4} className=\"g-4\">\n        {quizzes.map(quiz => (\n          <Col key={quiz.id}>\n            <Card>\n              <Card.Img variant=\"top\" src={quiz.thumbnail} />\n              <Card.Body>\n                <Card.Title>{quiz.name}</Card.Title>\n                <Card.Text>\n                  questions: {quiz.questions.length}\n                </Card.Text>\n                <Card.Text>\n                  finish time: {sum(quiz.questions)}\n                </Card.Text>\n                <Card.Text>\n                  <Button variant=\"outline-primary\" size=\"sm\" href={`/editquiz${quiz.id}`}>Edit</Button>\n                  <br />\n                  <Button variant=\"outline-secondary\" size=\"sm\" onClick={e => deleteQuiz(quiz.id, e)}>Delete</Button>\n                </Card.Text>\n                <Card.Text>\n                  <Button variant=\"link\" size=\"sm\" onClick={e => startQuiz(quiz.id, e)}>Start</Button>\n                  <br />\n                  <Button variant=\"link\" size=\"sm\" onClick={e => stopQuiz(quiz.id, e)}>Stop</Button>\n                </Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      <br />\n      Quiz name: <input type=\"text\" onChange={e => setName(e.target.value)}></input>\n      <button onClick={createQuiz}>Create</button>\n      <br />\n      <br />\n      Quiz id: <input type=\"text\" onChange={e => setId(e.target.value)}></input>\n      <button onClick={e => deleteQuiz(id, e)}>Delete</button>\n    </>);\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}